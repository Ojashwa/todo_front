{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","completed","editing","fetchTask","bind","handelChange","addTask","getCsrf","infoIcon","this","e","console","log","fetch","then","response","json","data","setState","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","preventDefault","getDiv","getElementById","setDiv","createElement","setAttribute","insertAdjacentHTML","inputBox","childNodes","appendChild","focus","addEventListener","insertAdjacentElement","target","value","keyCode","csrf","method","headers","body","JSON","stringify","click","catch","error","tasks","className","type","onClick","map","task","index","style","fontSize","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4c272e58.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList: [],\n      activeItem: {\n        id: null,\n        title: \"\",\n        completed: false,\n      },\n      editing: false,\n    };\n    this.fetchTask = this.fetchTask.bind(this);\n    this.handelChange = this.handelChange.bind(this);\n    this.addTask = this.addTask.bind(this);\n    this.getCsrf = this.getCsrf.bind(this);\n    this.infoIcon = this.infoIcon.bind(this);\n  }\n  componentDidMount() {\n    this.fetchTask();\n    // document.getElementById('t-info').addEventListener('mouseover',this.infoIcon,false);\n  }\n  fetchTask(e) {\n    console.log(\"featching.....\");\n    fetch(\"http://127.0.0.1:8000/api/task-list/\")\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          todoList: data,\n        })\n      );\n    // if(this.state.todoList){\n    //   this.addTask(e);\n    // }\n  }\n\n  //get csrf token\n  getCsrf(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== \"\") {\n      const cookies = document.cookie.split(\";\");\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.substring(0, name.length + 1) === name + \"=\") {\n          cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n          break;\n        }\n      }\n    }\n    return cookieValue;\n  }\n\n  // this method create a new task\n  addTask(e) {\n    e.preventDefault();\n    let getDiv = document.getElementById(\"list-wrapper\");\n    let setDiv = document.createElement(\"div\");\n    setDiv.setAttribute('class','row');\n    setDiv.setAttribute('id','new-task');\n    setDiv.insertAdjacentHTML(\n      \"afterbegin\",\n      \"<div class='col-sm-1'><i class='far fa-circle'></i>&nbsp;</div><div class='col-sm-11 task-wrapper flex-wrapper' id='new-inp'></div>\"\n    );\n    let inputBox = document.createElement(\"input\");\n    inputBox.setAttribute(\"type\", \"text\");\n    inputBox.setAttribute(\"class\", \"task-input flex-wrapper\");\n    // setDiv.appendChild(inputBox);\n    setDiv.childNodes[1].appendChild(inputBox);\n    getDiv.appendChild(setDiv);\n    inputBox.focus();\n    inputBox.addEventListener(\"keyup\", this.handelChange, false);\n  }\n  \n  //info on mouse over\n  infoIcon(e){\n    document.getElementById('info').insertAdjacentElement('afterbegin','<i class=\"fas fa-info-circle\"></i>');\n  }\n  handelChange(e) {\n    this.setState({\n      activeItem:{\n        ...this.state.activeItem,\n        title:e.target.value\n      }\n    });\n    // console.log(\"TITLE\",this.state.activeItem);\n    if (e.keyCode === 13) {\n     \n      let csrf = this.getCsrf(\"csrftoken\");\n      fetch(\"http://127.0.0.1:8000/api/task-create/\", {\n        method: \"POST\",\n        headers: {\n          'Content-type': 'application/json',\n          \"X-CSRFToken\": csrf,\n        },\n        body: JSON.stringify(this.state.activeItem),\n      }).then(\n        ((response) => {\n          // console.log(response);\n          // this.fetchTask();\n          this.setState({\n            activeItem: {\n              id: null,\n              title: \"\",\n              completed: false,\n            },\n          });\n          // document.getElementById('new-task').remove();\n          document.getElementById('submit').click();\n        })\n      ).catch(function (error){\n        console.log(\"ERROR\",error);// shows the if any error occur in response\n      })\n    } \n    // else {\n    //   console.log(e.target.value);\n    //   // console.log(e);\n    // }\n  }\n \n  render() {\n    let tasks = this.state.todoList;\n    return (\n      <div className=\"container\">\n        <div id=\"task-container\">\n          <div id=\"form-wrapper\">\n            <div className=\"row head\">\n              <div className=\"col-sm-6\">\n                <h2>Todo</h2>\n              </div>\n              <div className=\"col-sm-6\">\n                <button\n                  type=\"button\"\n                  id=\"submit\"\n                  onClick={this.addTask}\n                  className=\"btn btn-secondary\"\n                >\n                  <i className=\"fas fa-plus-square\"></i>\n                </button>\n              </div>\n            </div>\n            <div id=\"list-wrapper\">\n              {tasks.map(function (task, index) {\n                return (\n                  <div key={index} className=\"row\">\n                    <div className=\"col-sm-1\">\n                      <i className=\"far fa-circle\"></i>&nbsp;\n                    </div>\n                    <div className=\"col-sm-10 task-wrapper flex-wrapper\" id=\"t-info\">\n                      <p style={{ fontSize: \"20px\" }}>{task.title}</p>\n                    </div>\n                    <div className=\"col-sm-1\" ></div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('todo')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}